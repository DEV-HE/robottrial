require("dotenv").config();

const {
  createBot,
  createProvider,
  createFlow,
  addKeyword,
  EVENTS,
} = require("@bot-whatsapp/bot");
const QRPortalWeb = require("@bot-whatsapp/portal");
const { init } = require("bot-ws-plugin-openai");
const BaileysProvider = require("@bot-whatsapp/provider/baileys");
const MockAdapter = require("@bot-whatsapp/database/mock");
const { handlerAI } = require("./utils");
const { textToVoice } = require("./services/eventlab");
// const sendAudio = require("./services/sendAudio");

const employeesAddonConfig = {
  model: "gpt-3.5-turbo-0301",
  temperature: 0,
  apiKey: process.env.OPENAI_API_KEY,
};

const employeesAddon = init(employeesAddonConfig);


const flowStaff = addKeyword(EVENTS.ACTION).addAnswer(
  ["Claro que te interesa?", "mejor te envio audio.."],
  null,
  async (ctx, { flowDynamic, state, provider }) => {
    console.log("üôâ texto a voz....");
    try {
      const currentState = state.getMyState();
      const path = await textToVoice(currentState.answer);
      console.log(`üôâ Fin texto a voz....[PATH]:${path}`);
      // await flowDynamic({ body: "escucha", media: path });

      const id = ctx.key.remoteJid
      const sock = await provider.getInstance()
      await sock.sendMessage(
        id, 
        { audio: { url: path}, mimetype: 'audio/mp4'},
        // { url: path }, // can send mp3, mp4, & ogg
      )

    } catch (error) {
      if (error) {
        console.error("Error en flowStaff:", error);
      } else {
        console.error("Error en flowStaff: El error es undefined, revisa la funci√≥n textToVoice.");
      }
    }
  }
);






const flowVoiceNote = addKeyword(EVENTS.VOICE_NOTE).addAction(
  async (ctx, ctxFn) => {
    try {
      await ctxFn.flowDynamic("dame un momento para escucharte...üôâ");
      console.log("ü§ñ voz a texto....");
      const text = await handlerAI(ctx);
      console.log(`ü§ñ Fin voz a voz a texto....[TEXT]: ${text}`);
      const currentState = ctxFn.state.getMyState();
      console.log("QUIERO VER QU√â ES CTX",ctx,"FIN DE CTX")
      const fullSentence = `${currentState?.answer ?? ""}. ${text}`;
      const { employee, answer } = await employeesAddon.determine(fullSentence);
      ctxFn.state.update({ answer });
      employeesAddon.gotoFlow(employee, ctxFn);
    } catch (error) {
      console.error("Error en flowVoiceNote:", error);
    }
  }
);


const main = async () => {
  const adapterDB = new MockAdapter();

  const adapterFlow = createFlow([flowVoiceNote, flowStaff]);

  const adapterProvider = createProvider(BaileysProvider);

  /**
   * ü§î Empledos digitales
   * Imaginar cada empleado descrito con sus deberes de manera explicita
   */
  const employees = [
    {
      name: "SOY H√âCTOR Y TE PUEDO AYUDAR CON TUS FINANZAS",
      description:
        "Soy un representante de VOZ FINANZAS, una empresa que brinda soluciones integrales de alto valor para el crecimiento y gesti√≥n eficiente de tu negocio. Ofrecemos servicios avanzados de contabilidad y facturaci√≥n, gesti√≥n de tr√°mites para el registro de marcas y constituci√≥n de sociedades, as√≠ como evaluaciones exhaustivas de archivos y asesoramiento contable personalizado. Nuestro enfoque est√° en optimizar tu operaci√≥n comercial, asegurando que cada aspecto de tu gesti√≥n financiera sea impecable. Adem√°s, te brindamos herramientas para la toma de decisiones estrat√©gicas, apoyo en la planificaci√≥n fiscal y estrategias para mejorar la eficiencia operativa. Nuestro equipo de expertos est√° comprometido con ofrecer soluciones a medida que se adaptan a las necesidades √∫nicas de tu empresa, garantizando no solo el cumplimiento de las obligaciones legales y fiscales sino tambi√©n impulsando el crecimiento sostenible de tu negocio. Con VOZ FINANZAS, obtienes un aliado estrat√©gico que utiliza la √∫ltima tecnolog√≠a y las mejores pr√°cticas del sector para darte una ventaja competitiva en el mercado. Estamos aqu√≠ para resolver cualquier duda y ayudarte a navegar los desaf√≠os de tu empresa con confianza y √©xito.",
      flow: flowStaff,
    }
  ];

  employeesAddon.employees(employees);

  createBot({
    flow: adapterFlow,
    provider: adapterProvider,
    database: adapterDB,
  });

  QRPortalWeb()
  
};

main();
